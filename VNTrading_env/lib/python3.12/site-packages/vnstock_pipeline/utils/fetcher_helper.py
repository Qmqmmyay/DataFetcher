"""
Các hàm tiện ích hỗ trợ việc lấy dữ liệu, bao gồm caching, retry, và quản lý phiên (session).
"""

import time
import logging

logger = logging.getLogger(__name__)

def retry(func, max_attempts: int = 3, backoff: float = 2.0, *args, **kwargs):
    """
    Hàm bọc để thực hiện retry cho một hàm có thể thất bại.
    
    :param func: Hàm cần thực hiện.
    :param max_attempts: Số lần thử tối đa.
    :param backoff: Hệ số chờ giữa các lần thử.
    :return: Kết quả của hàm nếu thành công.
    :raises: Exception nếu tất cả các lần thử đều thất bại.
    """
    attempt = 0
    while attempt < max_attempts:
        try:
            return func(*args, **kwargs)
        except Exception as e:
            attempt += 1
            logger.warning(f"Thử lại {attempt}/{max_attempts} sau lỗi: {e}")
            time.sleep(backoff ** attempt)
    raise Exception("Hết số lần thử, không thể hoàn thành thao tác.")
