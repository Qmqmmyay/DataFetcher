"""
Lớp trừu tượng cho việc xuất dữ liệu và các triển khai cụ thể.
"""
import abc
import os

class Exporter(abc.ABC):
    """
    Lớp trừu tượng Exporter để xuất dữ liệu đã xử lý ra hệ thống lưu trữ.
    Phương thức export phải được định nghĩa trong lớp con.
    """
    @abc.abstractmethod
    def export(self, data, ticker: str, **kwargs):
        """
        Xuất dữ liệu đã xử lý.
        
        :param data: Dữ liệu đã chuyển đổi (ví dụ: DataFrame).
        :param ticker: Mã chứng khoán.
        :param kwargs: Các tham số bổ sung.
        """
        pass  # Must be implemented by subclass

    def preview(self, ticker: str, n: int = 5, **kwargs):
        """
        Phương thức tùy chọn để xem trước n dòng dữ liệu cuối cùng.
        
        :param ticker: Mã chứng khoán.
        :param n: Số dòng dữ liệu cần xem trước.
        :return: Dữ liệu xem trước, nếu có.
        """
        return None  # Default implementation returns None

# Triển khai xuất dữ liệu ra CSV
import pandas as pd

class CSVExport(Exporter):
    """
    Triển khai Exporter để xuất dữ liệu ra file CSV.
    """
    def __init__(self, base_path: str):
        # Initialize base path for CSV files
        self.base_path = base_path
        if not os.path.exists(self.base_path):
            os.makedirs(self.base_path)

    def export(self, data, ticker: str, **kwargs):
        # Construct file path for CSV export
        csv_path = os.path.join(self.base_path, f"{ticker}.csv")
        # Export data to CSV, appending if file exists
        if os.path.exists(csv_path):
            data.to_csv(csv_path, mode='a', header=False, index=False)
        else:
            data.to_csv(csv_path, index=False)
    
    def preview(self, ticker: str, n: int = 5, **kwargs):
        # Return the last n rows of the CSV file if it exists
        csv_path = os.path.join(self.base_path, f"{ticker}.csv")
        if not os.path.exists(csv_path):
            return None
        df = pd.read_csv(csv_path)
        return df.tail(n)

# Triển khai xuất dữ liệu ra DuckDB
import duckdb

class DuckDBExport(Exporter):
    """
    Triển khai Exporter để xuất dữ liệu ra cơ sở dữ liệu DuckDB.
    """
    def __init__(self, db_path: str):
        # Initialize database connection path
        self.db_path = db_path

    def export(self, data, ticker: str, **kwargs):
        # Connect to DuckDB database
        conn = duckdb.connect(self.db_path)
        # Create table if not exists and insert data; using a parameterized query via dataframe registration
        conn.execute(f"CREATE TABLE IF NOT EXISTS {ticker} AS SELECT * FROM data LIMIT 0", {'data': data})
        conn.execute(f"INSERT INTO {ticker} SELECT * FROM data", {'data': data})
        conn.close()
